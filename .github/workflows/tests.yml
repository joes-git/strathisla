name: Tests

on:
  pull_request:
    branches: ["main"]
    types: [review_requested, opened, synchronize]
    paths: ["src/**/*.py", "tests/**/*.py", "pyproject.toml"]
  push:
    branches: ["main", "develop"]
    paths: ["src/**/*.py", "tests/**/*.py", "pyproject.toml"]
  workflow_dispatch:

jobs:
  test:
    name: OS ${{ matrix.os }}, Python ${{ matrix.python-version }}, Spey ${{ matrix.spey-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        spey-version: [">=0.1.11", ">=0.2.0", "latest"]
        exclude:
          # Exclude some combinations to reduce CI load
          - os: windows-latest
            spey-version: ">=0.1.11"
          - os: macos-latest
            spey-version: ">=0.1.11"

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov pytest-xdist
        
    - name: Install spey version
      run: |
        if [ "${{ matrix.spey-version }}" = "latest" ]; then
          python -m pip install spey
        else
          python -m pip install "spey${{ matrix.spey-version }}"
        fi
      shell: bash
        
    - name: Install package
      run: |
        python -m pip install -e .
        
    - name: Test spey version compatibility
      run: |
        python -c "import spey; print(f'Spey version: {spey.__version__}')"
        
    - name: Test package import
      run: |
        python -c "import strathisla; print('Package imported successfully')"
        
    - name: Run tests with pytest
      run: |
        pytest --cov=strathisla --cov-report=xml --cov-report=term-missing tests/ -v
        
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' && matrix.spey-version == 'latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella